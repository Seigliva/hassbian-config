#!/bin/bash
SUITE_INSTALL_DIR=/opt/hassbian/suites
SUITE_CONTROL_DIR=/opt/hassbian/control

function install-suite {
  if [ ! -f $SUITE_CONTROL_DIR/$1 ]; then
    touch $SUITE_CONTROL_DIR/$1
    echo "SCRIPTSTATE=uninstalled" > $SUITE_CONTROL_DIR/$1
  fi
  SUITESTATE=$(cat $SUITE_CONTROL_DIR/$1 | grep SCRIPTSTATE | awk -F'=' '{print $2}')
  if [ "$SUITESTATE" == "installed" ]; then
    echo "$1 is already installed..."
    echo -n "Do you want to proceed? [y/N]"
    read response
    if [ "$response" == "y" ]; then
      source $SUITE_INSTALL_DIR/install_$1.sh
      $1-install-package
      sed -i -- 's/SCRIPTSTATE='$SUITESTATE'/SCRIPTSTATE=installed/g' $SUITE_CONTROL_DIR/$1
    fi
  else
    source $SUITE_INSTALL_DIR/install_$1.sh
    $1-install-package
    sed -i -- 's/SCRIPTSTATE='$SUITESTATE'/SCRIPTSTATE=installed/g' $SUITE_CONTROL_DIR/$1
  fi
  return 0
}

function upgrade-suite {
   source $SUITE_INSTALL_DIR/upgrade_$1.sh
   $1-upgrade-package
   return 0
}

function show-installed-suites {
  INSTALLERS=$(find $SUITE_CONTROL_DIR/ -maxdepth 1 -type f | grep -v 'homeassistant' | awk -F'/|_' ' {print $NF}' | awk -F. '{print $1}')
  for i in $INSTALLERS
  do
  STATE=$(cat $SUITE_CONTROL_DIR/$i | grep SCRIPTSTATE=installed | awk -F'=' '{print $2}')
  if [ "$STATE" != "" ]; then
  echo "$i:" $STATE
  fi
  done
  return 0
}

function verify-suite {
   if [ -f "$SUITE_INSTALL_DIR/install_$1.sh" ]; then
      retval=0
   elif [ -f "$SUITE_INSTALL_DIR/upgrade_$1.sh" ]; then
      retval=0
   else
      retval=1
   fi
   return $retval
}

if [ $# -lt 1 ]
then
   echo "Wrong command, try again."
   exit
fi
COMMAND=$1
SUITE=$2

case $COMMAND in
"install")
    if verify-suite $SUITE; then
      install-suite $SUITE
    else
      echo "Suite $SUITE doesn't exist, run 'hassbian-config show' to view all available suites. "
    fi
   exit
   ;;
"upgrade")
    if verify-suite $SUITE; then
      upgrade-suite $SUITE
    else
      echo "Suite $SUITE doesn't exist, run 'hassbian-config show' to view all available suites. "
    fi
  exit
  ;;
"show-installed")
    show-installed-suites
  exit
  ;;
"info")
    if verify-suite $SUITE; then
      if [ -f "$SUITE_CONTROL_DIR/$SUITE" ]; then
        STATE=$(cat $SUITE_CONTROL_DIR/$SUITE | grep SCRIPTSTATE=installed | awk -F'=' '{print $2}')
        echo "$SUITE:" $STATE
      else
        echo "Controll file for $SUITE not found, assumed state is 'uninstalled'."
      fi
      cat $SUITE_INSTALL_DIR/*_$SUITE.sh | grep CONSEPT_BY= | awk -F'=' '{print $2}' | tr -d '"'
      cat $SUITE_INSTALL_DIR/*_$SUITE.sh | grep MODIFIED_BY= | awk -F'=' '{print $2}' | tr -d '"'
      cat $SUITE_INSTALL_DIR/*_$SUITE.sh | grep DESC_SHORT= | awk -F'=' '{print $2}' | tr -d '"'
      cat $SUITE_INSTALL_DIR/*_$SUITE.sh | grep DESC_LONG= | awk -F'=' '{print $2}' | tr -d '"'
    else
      echo "Suite $SUITE doesn't exist, run 'hassbian-config show' to view all available suites. "
    fi
  exit
  ;;
*)
  echo "Wrong command, try again."
   exit
   ;;
esac
